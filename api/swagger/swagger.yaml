swagger: "2.0"
info:
  version: "0.0.1"
  title: SendLove I/O
# during dev, should point to your local machine
host: localhost:3000
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /swagger:
    x-swagger-pipe: swagger_raw
  /part:
    x-swagger-router-controller: partController
    get:
      description: Returns a list of parts
      operationId: getPartsArray
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: thingId
          in: query
          description: Thing Id of a part.
          required: true
          type: string
      responses:
        "200": 
          description: An array of parts.
          schema:
            type: array
            items:
              $ref: "#/definitions/part"
        default:
          description: Part error
          schema:
            $ref: "#/definitions/Error"
    post:
      description: Creates a new part.
      operationId: addPart
      produces:
        - application/json
      parameters:
        - name: part
          in: body
          description: Part to be added.
          required: true
          schema:
            $ref: '#/definitions/newPart'
      responses:
        '200':
          description: Created a new part.
          schema:
            type: object
            items:
              $ref: '#/definitions/part'
        default:
          description: Create part error
          schema:
            $ref: '#/definitions/Error'
  /part/{id}:
    x-swagger-router-controller: partController
    get:
      description: Returns a part
      operationId: getPart
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Gets a part.
          schema:
            $ref: "#/definitions/part"
        default:
          description: Part Error
          schema:
            $ref: "#/definitions/Error"            
  /thing:
    x-swagger-router-controller: thingController
    get:
      description: Returns a list of things
      operationId: getThingsArray
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: latitude
          in: query
          description: Latitude of a location.
          required: false
          type: number
        - name: longitude
          in: query
          description: Longitude of a location.
          required: false
          type: number
        - name: personId
          in: query
          description: Person of a thing.
          required: false
          type: string
      responses:
        "200": 
          description: An array of things.
          schema:
            type: array
            items:
              $ref: "#/definitions/thing"
        default:
          description: Thing error
          schema:
            $ref: "#/definitions/Error"
    post:
      description: Creates a new thing.
      operationId: addThing
      produces:
        - application/json
      parameters:
        - name: thing
          in: body
          description: Thing to be added.
          required: true
          schema:
            $ref: '#/definitions/newThing'
      responses:
        '200':
          description: Created a new thing.
          schema:
            type: object
            items:
              $ref: '#/definitions/thing'
        default:
          description: Create thing error
          schema:
            $ref: '#/definitions/Error'
  /thing/{id}:
    x-swagger-router-controller: thingController
    get:
      description: Returns a thing
      operationId: getThing
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Gets a thing.
          schema:
            $ref: "#/definitions/thing"
        default:
          description: Thing Error
          schema:
            $ref: "#/definitions/Error"
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorld"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
# complex objects have schema definitions
definitions:
  Error:
    required:
      - message
    properties:
      message:
        type: string
  HelloWorld:
    required:
      - message
    properties:
      message:
        type: string
  part:
    type: object
    required:
      - name
      - description
    properties:
      _id:
        type: string
        description: Id of a part.
      name:
        type: string
        description: Name of a part.
      description:
        type: string
        description: Description a part.
      thingId:
        type: string
        description: Thing Id of a part.
      personId:
        type: string
        description: User Id of a part.
      latitude:
        type: number
        description: Latitude of a location.
      longitude:
        type: number
        description: Longitude of a location.
      image:
        type: string
        description: Image URI for a part.
      category:
        type: string
        description: Category of part.
      altId:
        type: string
        description: Alternate id of a part.
  newPart:
    type: object
    required:
      - name
      - description
      - personId
    properties:
      name:
        type: string
        description: Name of a part.
      description:
        type: string
        description: Description of a part.
      thingId:
        type: string
        description: Thing Id of a part.
      personId:
        type: string
        description: User Id of a part.
      latitude:
        type: number
        description: Latitude of a location.
      longitude:
        type: number
        description: Longitude of a location.
      image:
        type: string
        description: Image URI for a part.
      category:
        type: string          
        description: Category of a part.
      altId:
        type: string
        description: Alternate Id of a part.
  thing:
    type: object
    required:
      - name
      - description
      - personId
      - latitude
      - longitude
    properties:
      _id:
        type: string
        description: Id of a thing.
      name:
        type: string
        description: Name of a thing.
      description:
        type: string
        description: Description of a thing.
      personId:
        type: string
        description: Person Id of a thing.
      latitude:
        type: number
        description: Latitude of a location.
      longitude:
        type: number
        description: Longitude of a location.
      image:
        type: string
        description: Image URI of a thing.
      category:
        type: string  
        description: Category of a thing.
      altId:
        type: string
        description: Alternate Id of a thing.
  newThing:
    type: object
    required:
      - name
      - description
      - personId
      - latitude
      - longitude
    properties:
      name:
        type: string
        description: Name of a thing.
      description:
        type: string
        description: Description a thing.
      personId:
        type: string
        description: User Id of a thing.
      latitude:
        type: number
        description: Latitude of a location.
      longitude:
        type: number
        description: Longitude of a location.
      image:
        type: string
        description: Image avatar for a thing.
      category:
        type: string
        description: Category of thing.
      altId:
        type: string
        description: Alternate Id of a thing.